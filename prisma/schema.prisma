// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  invoices      Invoice[]
}

model Customer {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  phone         String?
  address       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  invoices      Invoice[]
}

model Product {
  id            String        @id @default(cuid())
  name          String
  description   String?
  model         String
  price         Float
  stock         Int          @default(0)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  invoiceItems  InvoiceItem[]
}

model Invoice {
  id            String        @id @default(cuid())
  invoiceNumber String        @unique
  userId        String
  customerId    String
  status        InvoiceStatus @default(DRAFT)
  totalAmount   Float
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  user          User          @relation(fields: [userId], references: [id])
  customer      Customer      @relation(fields: [customerId], references: [id])
  items         InvoiceItem[]
}

model InvoiceItem {
  id          String   @id @default(cuid())
  invoiceId   String
  productId   String
  quantity    Int
  unitPrice   Float
  totalPrice  Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}

enum UserRole {
  ADMIN
  USER
}

enum InvoiceStatus {
  DRAFT
  PENDING
  PAID
  CANCELLED
}
